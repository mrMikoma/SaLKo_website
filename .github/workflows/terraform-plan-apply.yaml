name: Terraform Plan and Apply

on:
  push:
    paths:
      - "infra/terraform/**"
      - ".github/workflows/terraform-plan-apply.yaml"
    branches:
      - main

jobs:
  terraform-plan:
    name: "Terraform Plan"
    runs-on: ubuntu-24.04
    # environment: production

    permissions:
      id-token: write
      contents: read

    outputs:
      tfplanExitCode: ${{ steps.tf-plan.outputs.exitcode }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_wrapper: false
          terraform_version: 1.12.1

      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.CF_BUCKET_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CF_BUCKET_SECRET_KEY }}
        run: terraform -chdir=infra/terraform init

      - name: Terraform Format
        run: terraform -chdir=infra/terraform fmt -check

      - name: Terraform Validate
        run: terraform -chdir=infra/terraform validate

      - name: Terraform Plan
        id: tf-plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.CF_BUCKET_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CF_BUCKET_SECRET_KEY }}
        run: |
          export exitcode=0
          terraform -chdir=infra/terraform plan -detailed-exitcode -no-color -out tfplan -var="hetzner_api_token=${{ secrets.HETZNER_API_TOKEN }}" -var="vps_ssh_public_key=${{ secrets.VPS_PUBLIC_KEY }}" || export exitcode=$?

          echo "exitcode=$exitcode" >> $GITHUB_OUTPUT

          echo "Terraform Plan completed with exit code: $exitcode"

          if [ $exitcode -eq 1 ]; then
            echo Terraform Plan Failed!
            exit 1
          else 
            exit 0
          fi

          # echo "Running Terraform Plan..."
          # export exitcode=0
          # terraform -chdir=infra/terraform plan -detailed-exitcode -no-color -out tfplan \
          #   -var="hetzner_api_token=${{ secrets.HETZNER_API_TOKEN }}" \
          #   -var="vps_ssh_public_key=${{ secrets.VPS_PUBLIC_KEY }}" || export exitcode=$?
          #         
          # echo "exitcode=$exitcode" >> "$GITHUB_OUTPUT"
          # 
          # echo "Terraform Plan completed with exit code: $exitcode"
          #         
          # if [ "$exitcode" -eq 1 ]; then
          #   echo "❌ Terraform Plan failed."
          #   exit 1
          # elif [ "$exitcode" -eq 2 ]; then
          #   echo "✅ Terraform has pending changes."
          # else
          #   echo "✅ Terraform is up to date. No changes."
          # fi

      - name: Publish Terraform Plan
        uses: actions/upload-artifact@v4.6.2
        with:
          name: tfplan
          path: infra/terraform/tfplan

      - name: Create String Output
        id: tf-plan-string
        run: |
          TERRAFORM_PLAN=$(terraform -chdir=infra/terraform show -no-color tfplan)

          delimiter="$(openssl rand -hex 8)"
          echo "summary<<${delimiter}" >> $GITHUB_OUTPUT
          echo "## Terraform Plan Output" >> $GITHUB_OUTPUT
          echo "<details><summary>Click to expand</summary>" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo '```terraform' >> $GITHUB_OUTPUT
          echo "$TERRAFORM_PLAN" >> $GITHUB_OUTPUT
          echo '```' >> $GITHUB_OUTPUT
          echo "</details>" >> $GITHUB_OUTPUT
          echo "${delimiter}" >> $GITHUB_OUTPUT

      - name: Publish Terraform Plan to Task Summary
        env:
          SUMMARY: ${{ steps.tf-plan-string.outputs.summary }}
        run: |
          echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY

  terraform-apply:
    name: "Terraform Apply"
    runs-on: ubuntu-24.04
    needs: [terraform-plan]
    if: github.ref == 'refs/heads/main' && needs.terraform-plan.outputs.tfplanExitCode == 2
    environment: production

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_version: 1.12.1

      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.CF_BUCKET_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CF_BUCKET_SECRET_KEY }}
        run: terraform -chdir=infra/terraform init
      - name: Download Terraform Plan
        uses: actions/download-artifact@v4.3.0
        with:
          name: tfplan
          path: infra/terraform

      - name: Terraform Apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.CF_BUCKET_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CF_BUCKET_SECRET_KEY }}
        run: terraform -chdir=infra/terraform apply -auto-approve tfplan
