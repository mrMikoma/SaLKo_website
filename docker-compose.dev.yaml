services:
  # postgres-dev:
  #   image: "postgres:17.2"
  #   container_name: ${NAME_PREFIX}-postgres-${BRANCH_SUFFIX}
  #   networks:
  #     - internal
  #   environment:
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #     - POSTGRES_DB=${POSTGRES_DB}
  #   volumes:
  #     - ./postgres-${BRANCH_SUFFIX}/postgres-data:/var/lib/postgresql/data
  #     - ./postgres-${BRANCH_SUFFIX}/init/init.sql:/docker-entrypoint-initdb.d/init.sql
  #   restart: always
  #   healthcheck:
  #     test: ["CMD", "pg_isready", "-U", "postgres"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5

#   nextjs:
#     image: ghcr.io/mrmikoma/salko_website-nextjs-dev:latest
#     container_name: ${NAME_PREFIX}-nextjs-${BRANCH_SUFFIX}
#     networks:
#       - internal
#       - outgoing
#     env_file: .env.dev
#     environment:
#       - PORT=${CONTAINER_PORT}
#       - HOSTNAME=${HOSTNAME}
#     #  - DATABASE_CONNECTION_STRING=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-${BRANCH_SUFFIX}:${POSTGRES_HOST_PORT}/${POSTGRES_DB}
#     # depends_on:
#     #   postgres-dev:
#     #     condition: service_healthy
#     restart: unless-stopped
#     # healthcheck:
#     #   test: curl --fail http://localhost:3001/ || exit 1
#     #   interval: 60s
#     #   timeout: 30s
#     #   retries: 3
#     #   start_period: 30s
#     labels:
#       - traefik.enable=true
#       - traefik.http.routers.nextjs-${BRANCH_SUFFIX}.rule=Host(`${HOST_URL}`)
#       - traefik.http.routers.nextjs-${BRANCH_SUFFIX}.entrypoints=https
#       - traefik.http.routers.nextjs-${BRANCH_SUFFIX}.tls.certresolver=cloudflare
#       # - traefik.http.routers.nextjs-${BRANCH_SUFFIX}.middlewares=redirect-to-https
#       # - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
#       # - traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true
#       - traefik.http.services.nextjs-${BRANCH_SUFFIX}.loadbalancer.server.port=${CONTAINER_PORT}
#       # - traefik.http.services.nextjs-${BRANCH_SUFFIX}.loadbalancer.healthcheck
#       # - traefik.http.services.nextjs-${BRANCH_SUFFIX}.rateLimit.burst=100
#       # - traefik.http.services.nextjs-${BRANCH_SUFFIX}.rateLimit.average=50

#   - "traefik.http.routers.preview-${UUID}.middlewares=strip-prefix-${UUID}"
# environment:
#   - NEXT_PUBLIC_PREVIEW_SECRET=${SECRET}

  whoami:
    image: "traefik/whoami"
    container_name: whoami
    networks:
      - outgoing
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`${HOST_URL}`)"
      - "traefik.http.routers.whoami.entrypoints=https"

networks:
  outgoing:
    driver: bridge
  internal:
    driver: bridge
